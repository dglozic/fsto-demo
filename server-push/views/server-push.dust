<!DOCTYPE html>
<html lang="en">
  <head>
    <title>{title}</title>
    <meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1" >
	<!--  Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="{headerUrl}/css/header.css">
    <link rel="stylesheet" href="/server-push/css/style.css">
  </head>

<body>
   {header|s}
   <div class="mainContent">
      <h1>Server Push Via Web Sockets</h1>
      
    <p>
        This page demonstrate the use of Sockets.io to push data from the Node.js server.
    </p>
    <p><button type="button" class="btn btn-primary" id="playButton" data-state="start">
        <span class="glyphicon glyphicon-play" id="playButtonIcon"></span></button>
    </p>
    <div class="progress" style="width: 50%">
       <div id="progress" class="progress-bar" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%;">
          <span class="sr-only">100% Complete</span>
       </div>
    </div>
 
      
   </div>
   <!--  jQuery -->
   <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
   <!-- Bootstrap JS -->   
   <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js"></script>
   <script src="https://cdn.jsdelivr.net/dustjs/2.4.0/dust-core.js"></script>
   <script src="{headerUrl}/js/header.js"></script>
   <script src="{headerUrl}/js/notifications.js"></script>      
   <script src="{ioOrigin}/socket.io/socket.io.js"></script>

   <script>
   var origin = "{ioOrigin}";
   {! This is messy, breaks encapsulation - should be untangled in a real system !}
   if (typeof io === "object") {
      initHeaderWebSockets(io, origin, "{notificationUrl}", "{oauth2Proxy}");

   {`
      var socket = io.connect(origin);
      socket.on('message', function (message) {
    	 console.log("message arrived into the client"); 
      });
      socket.on('build', function (build) {
          if (build.progress==0)
             _resetProgress();
          else {
             $("#progress").attr("aria-valuenow", ""+build.progress)
             .css("width", build.progress+"%");
         if (build.errors) {
                $("#progress").removeClass("progress-bar-success")
                .addClass("progress-bar-danger");
             }
          }
          var state = (build.running)?"stop":"start";
          if ($("#playButton").data("state")!=state) {
             if (state=="stop") {
                $("#playButtonIcon").removeClass("glyphicon-play")
               .addClass("glyphicon-stop");
             } else {
                $("#playButtonIcon").removeClass("glyphicon-stop")
               .addClass("glyphicon-play");
             }
             $("#playButton").data("state", state);
         }
      });
   
      // bind event listeners
      $("#playButton").on("click", _handleButtonClick);
   
      // private function
      function _handleButtonClick(evt) {
         var state = $("#playButton").data("state");
         $.post("/server-push/", { action: state });
      }
   
      function _resetProgress() {
         $("#progress").removeClass("progress-bar-danger")
         .attr("aria-valuenow", "0")
         .css("width", "0%")
         .removeClass("progress-bar-danger")
         .addClass("progress-bar-success");
      }

   `}
  }
</script>   
 </body>
</html>